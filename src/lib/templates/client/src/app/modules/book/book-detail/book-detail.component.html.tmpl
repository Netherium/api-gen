<mat-card class="m-2 m-md-3 mat-elevation-z4">
  <mat-card-header>
    <mat-card-title>{{action === 1 ? 'Update' : 'Create'}} Book
      <span class="ml-1 mat-caption" *ngIf="action===1">{{book._id}}</span>
    </mat-card-title>
  </mat-card-header>
  <mat-card-content>
    <form #entityForm="ngForm" id="entityForm" novalidate>
      <div class="d-flex flex-wrap">
        <div class="col-12 col-md-7">
          <mat-form-field class="w-100">
            <mat-label>Title</mat-label>
            <input matInput [(ngModel)]="book.title" name="title" autocomplete="off">
            <mat-icon matSuffix>text_fields</mat-icon>
          </mat-form-field>
          <mat-form-field class="w-100">
            <mat-label>Isbn</mat-label>
            <input matInput [(ngModel)]="book.isbn" name="isbn" type="number" autocomplete="off">
            <mat-icon matSuffix svgIcon="neth:numeric"></mat-icon>
          </mat-form-field>
          <div class="w-100 mb-3">
            <mat-label class="mat-label-toggle">IsPublished</mat-label>
            <mat-slide-toggle [(ngModel)]="book.isPublished" name="isPublished"></mat-slide-toggle>
          </div>
          <mat-form-field class="w-100">
            <mat-label>PublishedAt</mat-label>
            <input matInput [(ngModel)]="book.publishedAt" [matDatepicker]="picker1"
                   name="publishedAt" autocomplete="off">
            <mat-datepicker-toggle [for]="picker1" matSuffix></mat-datepicker-toggle>
            <mat-datepicker #picker1></mat-datepicker>
          </mat-form-field>
          <mat-form-field class="w-100">
            <mat-label>Tags</mat-label>
            <mat-chip-list #tagsChipList>
              <mat-chip *ngFor="let item of book.tags; index as tagsIndex" [selectable]="true" [removable]="true"
                        (removed)="removeTags(tagsIndex, entityForm)">
                {{item}}
                <mat-icon matChipRemove>cancel</mat-icon>
              </mat-chip>
              <input matInput [(ngModel)]="tagsValue" [matChipInputFor]="tagsChipList"
                     (matChipInputTokenEnd)="addTags($event)" name="tags" autocomplete="off">
            </mat-chip-list>
          </mat-form-field>
          <mat-form-field class="w-100">
            <mat-label>PagesForReview</mat-label>
            <mat-chip-list #pagesForReviewChipList>
              <mat-chip *ngFor="let item of book.pagesForReview; index as pagesForReviewIndex" [selectable]="true" [removable]="true"
                        (removed)="removePagesForReview(pagesForReviewIndex, entityForm)">
                {{item}}
                <mat-icon matChipRemove>cancel</mat-icon>
              </mat-chip>
              <input matInput [(ngModel)]="pagesForReviewValue" [matChipInputFor]="pagesForReviewChipList"
                     (matChipInputTokenEnd)="addPagesForReview($event)" name="pagesForReview" type="number" autocomplete="off">
            </mat-chip-list>
          </mat-form-field>
          <mat-form-field class="w-100">
            <mat-label>DatesForReview</mat-label>
            <mat-chip-list #datesForReviewChipList>
              <mat-chip *ngFor="let item of book.datesForReview; index as datesForReviewIndex" [selectable]="true" [removable]="true"
                        (removed)="removeDatesForReview(datesForReviewIndex, entityForm)">
                {{item | date}}
                <mat-icon matChipRemove>cancel</mat-icon>
              </mat-chip>
              <input matInput [(ngModel)]="datesForReviewValue" [matChipInputFor]="datesForReviewChipList"
                     (matChipInputTokenEnd)="addDatesForReview($event)" [matDatepicker]="picker2"
                     name="datesForReview" autocomplete="off">
              <mat-datepicker-toggle [for]="picker2" matSuffix></mat-datepicker-toggle>
              <mat-datepicker #picker2></mat-datepicker>
            </mat-chip-list>
          </mat-form-field>
        </div>
        <div class="col-12 col-md-5">
          <mat-form-field class="w-100">
            <mat-label>Author</mat-label>
            <input matInput [(ngModel)]="book.author" (ngModelChange)="authorChanged($event)"
                   [matAutocomplete]="authorAuto" name="author" autocomplete="off">
            <mat-icon matSuffix svgIcon="neth:hexagon" *ngIf="!isLoadingAuthor"></mat-icon>
            <mat-spinner *ngIf="isLoadingAuthor" diameter="20" matSuffix></mat-spinner>
            <mat-autocomplete #authorAuto="matAutocomplete" [displayWith]="authorDisplayFn">
              <mat-option *ngFor="let item of filteredAuthor | async" [value]="item">
                {{item.email}}
              </mat-option>
            </mat-autocomplete>
          </mat-form-field>
          <mat-form-field class="w-100">
            <mat-label>Collaborators</mat-label>
            <mat-chip-list #collaboratorsChipList>
              <mat-chip *ngFor="let item of book.collaborators; index as collaboratorsIndex" [selectable]="true"
                        [removable]="true" (removed)="removeCollaborators(collaboratorsIndex, entityForm)">
                {{item.email}}
                <mat-icon matChipRemove>cancel</mat-icon>
              </mat-chip>
              <input matInput [ngModel]="book.collaborators" (ngModelChange)="collaboratorsChanged($event)"
                     [matChipInputFor]="collaboratorsChipList" [matAutocomplete]="collaboratorsAuto"
                     name="collaborators" autocomplete="off">
              <mat-icon matSuffix svgIcon="neth:hexagon-multiple" *ngIf="!isLoadingCollaborators"></mat-icon>
              <mat-spinner *ngIf="isLoadingCollaborators" diameter="20" matSuffix></mat-spinner>
              <mat-autocomplete #collaboratorsAuto="matAutocomplete" [displayWith]="collaboratorsDisplayFn"
                                (optionSelected)="selectedCollaborators($event)">
                <mat-option *ngFor="let item of filteredCollaborators | async" [value]="item">
                  {{item.email}}
                </mat-option>
              </mat-autocomplete>
            </mat-chip-list>
          </mat-form-field>
          <app-file-upload [(ngModel)]="book.cover" name="cover" [title]="'Cover'" [multiple]="false"></app-file-upload>
          <app-file-upload [(ngModel)]="book.images" name="images" [title]="'Images'" [multiple]="true"></app-file-upload>
        </div>
      </div>
      <div class="d-flex justify-content-end">
        <a [routerLink]="['/books']"  class="mr-3" color="accent" mat-raised-button>Cancel</a>
        <ng-container>
          <button (click)="save()" *ngIf="!isLoading; else loadingButton" [disabled]="entityForm.pristine"
                  color="primary" mat-raised-button>Save
          </button>
          <ng-template #loadingButton>
            <button color="accent" disabled mat-raised-button>
              <mat-spinner class="m-2" diameter="20"></mat-spinner>
            </button>
          </ng-template>
        </ng-container>
      </div>
    </form>
  </mat-card-content>
</mat-card>