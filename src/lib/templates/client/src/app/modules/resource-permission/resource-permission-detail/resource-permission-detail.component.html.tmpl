<mat-card class="m-2 m-md-3 mat-elevation-z4">
  <mat-card-header>
    <mat-card-title>{{action === 1 ? 'Update' : 'Create'}} Resource Permission
      <span *ngIf="action===1" class="ml-1 mat-caption">{{resourcePermission._id}}</span>
    </mat-card-title>
  </mat-card-header>
  <mat-card-content>
    <form #entityForm="ngForm" id="entityForm" novalidate>
      <div class="d-flex flex-wrap">
        <div class="col-12 col-md-7">
          <mat-form-field class="w-100">
            <mat-label>ResourceName</mat-label>
            <input [(ngModel)]="resourcePermission.resourceName" autocomplete="off" matInput name="resourceName" required>
            <mat-icon matSuffix>text_fields</mat-icon>
          </mat-form-field>
        </div>
        <div class="col-12 col-md-5">
          <div class="flex-column">
            <div class="flex-row d-flex justify-content-between align-items-center">
              <p class="m-0">Methods</p>
              <div>
                <button (click)="removeMethods(entityForm)" mat-icon-button type="button">
                  <mat-icon>remove</mat-icon>
                </button>
                <button (click)="addMethods(entityForm)" mat-icon-button type="button">
                  <mat-icon>add</mat-icon>
                </button>
              </div>
            </div>
            <div *ngFor="let method of resourcePermission.methods; index as methodIndex; last as isLastMethod"
                 class="grouped-inputs">
              <mat-form-field class="w-100">
                <mat-label>Name</mat-label>
                <input [(ngModel)]="method.name" autocomplete="off" matInput
                       name="name[{{methodIndex}}]" placeholder="list | show | create | update | delete">
                <mat-icon matSuffix>text_fields</mat-icon>
              </mat-form-field>
              <mat-form-field class="w-100">
                <mat-label>Roles</mat-label>
                <mat-chip-list #rolesChipList>
                  <mat-chip
                    (removed)="removeRoles(role, methodIndex, entityForm)"
                    *ngFor="let role of method.roles"
                    [removable]="removableChipListRoles"
                    [selectable]="selectableChipListRoles">
                    {{role.name}}
                    <mat-icon *ngIf="removableChipListRoles" matChipRemove>cancel</mat-icon>
                  </mat-chip>
                  <input (ngModelChange)="roleChanged($event, methodIndex)" [matAutocomplete]="rolesAuto" [matChipInputFor]="rolesChipList"
                         [ngModel]="roleInputs[methodIndex]" autocomplete="off"
                         matInput name="roleInputs[{{methodIndex}}]">
                  <mat-icon *ngIf="!isLoadingRoles[methodIndex]" matSuffix svgIcon="neth:hexagon-multiple"></mat-icon>
                  <mat-spinner *ngIf="isLoadingRoles[methodIndex]" diameter="20" matSuffix></mat-spinner>
                  <mat-autocomplete #rolesAuto="matAutocomplete" (optionSelected)="selectedRoles($event, methodIndex)"
                                    [displayWith]="roleDisplayFn">
                    <mat-option *ngFor="let item of filteredRoles[methodIndex] | async" [value]="item">
                      {{item.name}}
                    </mat-option>
                  </mat-autocomplete>
                </mat-chip-list>
              </mat-form-field>
            </div>
          </div>
        </div>
      </div>
      <div class="d-flex justify-content-end">
        <a [routerLink]="['/resource-permissions']" class="mr-3" color="accent" mat-raised-button>Cancel</a>
        <ng-container>
          <button (click)="save()" *ngIf="!isLoading; else loadingButton" [disabled]="entityForm.invalid || entityForm.pristine"
                  color="primary" mat-raised-button>Save
          </button>
          <ng-template #loadingButton>
            <button color="accent" disabled mat-raised-button>
              <mat-spinner class="m-2" diameter="20"></mat-spinner>
            </button>
          </ng-template>
        </ng-container>
      </div>
    </form>
  </mat-card-content>
</mat-card>
