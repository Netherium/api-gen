<mat-card class="m-2 m-md-3 mat-elevation-z4">
  <mat-card-header>
    <mat-card-title>{{action === 1 ? 'Update' : 'Create'}} User
      <span class="ml-1 mat-caption" *ngIf="action===1">{{user._id}}</span>
    </mat-card-title>
  </mat-card-header>
  <mat-card-content>
    <form #entityForm="ngForm" id="entityForm" novalidate>
      <div class="d-flex flex-wrap">
        <div class="col-12 col-md-7">
          <mat-form-field class="w-100">
            <mat-label>Email</mat-label>
            <input matInput [(ngModel)]="user.email" name="email" autocomplete="off" required>
            <mat-icon matSuffix>text_fields</mat-icon>
          </mat-form-field>
          <mat-form-field class="w-100">
            <mat-label>Password</mat-label>
            <input matInput [(ngModel)]="user.password" name="password" autocomplete="off" [required]="action === 0" >
            <mat-icon matSuffix>text_fields</mat-icon>
          </mat-form-field>
          <mat-form-field class="w-100">
            <mat-label>Name</mat-label>
            <input matInput [(ngModel)]="user.name" name="name" autocomplete="off" required>
            <mat-icon matSuffix>text_fields</mat-icon>
          </mat-form-field>
          <div class="w-100 mb-3">
            <mat-label class="mat-label-toggle">IsVerified</mat-label>
            <mat-slide-toggle [(ngModel)]="user.isVerified" name="isVerified" ></mat-slide-toggle>
          </div>
        </div>
        <div class="col-12 col-md-5">
          <mat-form-field class="w-100">
            <mat-label>Role</mat-label>
            <input matInput [(ngModel)]="user.role" (ngModelChange)="roleChanged($event)"
                   [matAutocomplete]="roleAuto" name="role" autocomplete="off" isSelectedObject required>
            <mat-icon matSuffix svgIcon="neth:hexagon" *ngIf="!isLoadingRole"></mat-icon>
            <mat-spinner *ngIf="isLoadingRole" diameter="20" matSuffix></mat-spinner>
            <mat-autocomplete #roleAuto="matAutocomplete" [displayWith]="roleDisplayFn">
              <mat-option *ngFor="let item of filteredRole | async" [value]="item">
                {{item.name}}
              </mat-option>
            </mat-autocomplete>
          </mat-form-field>
          <app-file-upload [(ngModel)]="user.display" name="display" [title]="'Display'" [multiple]="false"></app-file-upload>
        </div>
      </div>
      <div class="d-flex justify-content-end">
        <a [routerLink]="['/users']"  class="mr-3" color="accent" mat-raised-button>Cancel</a>
        <ng-container>
          <button (click)="save()" *ngIf="!isLoading; else loadingButton" [disabled]="entityForm.invalid || entityForm.pristine"
                  color="primary" mat-raised-button>Save
          </button>
          <ng-template #loadingButton>
            <button color="accent" disabled mat-raised-button>
              <mat-spinner class="m-2" diameter="20"></mat-spinner>
            </button>
          </ng-template>
        </ng-container>
      </div>
    </form>
  </mat-card-content>
</mat-card>
